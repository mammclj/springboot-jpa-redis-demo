spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/jpa_test
    username: root
    password: root
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    #初始化连接数量，最大最小连接数
    initialSize: 5
    maxActive: 10
    minIdle: 3
    #获取连接等待超时的时间
    maxWait: 600000
    #超过时间限制是否回收
    removeAbandoned: true
    #超过时间限制多长
    removeAbandonedTimeout: 180
    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 600000
    #配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    #用来检测连接是否有效的sql，要求是一个查询语句
    validationQuery: SELECT 'x'
    #申请连接的时候检测
    testWhileIdle: true
    #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
    testOnBorrow: false
    #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
    testOnReturn: false
    #打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 50
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙（防止SQL注入）
    filters: stat,wall,slf4j
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5Dialect
  redis:
    host: 127.0.0.1
    port: 6379
    pool:
      max-idle: 100
      min-idle: 1
      max-active: 1000
      max-wait: -1
logging:
  level: info
  file: log.log